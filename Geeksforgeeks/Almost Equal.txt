/*************************************************************************
Given two strings s1 and s2 consisting of only lowercase characters whose anagrams are almost equal. The task is to count the number of characters which needs to be edited(delete) to make s1 equal to s2.

Example:

Input:
s1 = madame
s2 = madam
Output:
1
Explanation:
String s1 = madame, string s2 = madam. 
character 'e' in first string needs to 
be deleted to make s1 equal to s2.
 

Your Task:
Print the count of characters needed to delete to make s1 and s2 equal. Complete the given function.

Expected Time Complexity: O(max(|s1|,|s2|))
Expected Auxilary Space: O(|s1| + |s2|) 

Constraints:
1 <= s1, s2 <= 104

************************************************************************/
//{ Driver Code Starts
//Initial Template for C++
#include <bits/stdc++.h>
using namespace std;



// } Driver Code Ends
//User function Template for C++

/*Function to count number of characters 
* to make s1 and s2 equal
* s1 : first string
* s2 : second string
*/
class Solution{
    public:
    int countChars(string s1, string s2){
        
        // Your code here
        int cnt1[26]={0},cnt2[26]={0};
        int res=0;
        for(int i=0; s1[i]; i++)
        {
            cnt1[s1[i]-'a']++;
        }
        for(int i=0; s2[i]; i++)
        {
            cnt2[s2[i]-'a']++;
        }
        for(int i=0; i<26; i++)
        res+=abs(cnt1[i]-cnt2[i]);
        return res;
    }
};

//{ Driver Code Starts.
int main() {
	
	int testcase;
	
	cin >> testcase;
	
	while(testcase--){
	    
	    // taking string input
	    string s1, s2;
	    cin >> s1 >> s2;
	    Solution obj;
	    cout << obj.countChars(s1, s2) << endl;
	}
	
	return 0;
}
// } Driver Code Ends