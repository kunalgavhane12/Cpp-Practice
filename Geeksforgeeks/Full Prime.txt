/*************************************************************************
Given a number N.Check if it is Full Prime or not. 
Note : A full prime number is one in which the number itself is prime and all its digits are also prime.


Example 1:

Input:
N=31
Output:
0
Explanation:
N is prime but since 1 is not a 
prime so all the digits of N
are not prime.So, Answer is 0.

Example 2:

Input:
N=37
Output:
1
Explanation:
N is prime and so is all of its digits.
Thus, Answer is 1.

Your Task:
You don't need to read input or print anything.Your task is to complete the function fullPrime() which takes the number N as input parameter and returns 1 if the number is Full Prime.Otherwise return 0.


Expected Time Complexity:O(Sqrt(N))
Expected Auxillary Space:O(1)


Constraints:
1<=N<=109

*************************************************************************/
//{ Driver Code Starts
//Initial template for C++
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
    public:
	int fullPrime(int N){
	    //code here
	    for(int i=2;i<=sqrt(N);i++)
	    {
	        if(N%i==0)
	        return 0;
	    }
	    while(N)
	    {
	       int rem=N%10;
	       if(rem!=2 && rem!=3 && rem!=5 && rem!=7)
	       return 0;
	       N/=10;
	    }
	    return 1;
	}
};


//{ Driver Code Starts.
int main()
{
	int t;
    cin>>t;
    while(t--){
	   int N;
	   cin>>N;
       Solution ob;
       cout << ob.fullPrime(N)<<"\n";
    }
}
// } Driver Code Ends